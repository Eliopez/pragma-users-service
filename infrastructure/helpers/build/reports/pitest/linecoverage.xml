<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='co.com.pragma.logger.LoggerTest' method='testExceptionLogging()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testExceptionLogging()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testExceptionLogging()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='createLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='createLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='createLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isErrorEnabled()Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='&lt;init&gt;()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='isEnabled(Lco/com/pragma/model/common/LogLevel;)Z' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='isEnabled(Lco/com/pragma/model/common/LogLevel;)Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='isEnabled(Lco/com/pragma/model/common/LogLevel;)Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;Ljava/lang/Throwable;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='clearLoggers()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;Ljava/lang/Throwable;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;Ljava/lang/Throwable;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='clearLoggers()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;Ljava/lang/Throwable;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isWarnEnabled()Z' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;init&gt;(Ljava/lang/String;IILjava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testExceptionLogging$2(Ljava/lang/Exception;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testExceptionLogging$2(Ljava/lang/Exception;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='&lt;init&gt;(Ljava/lang/String;IILjava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getInstance()Lco/com/pragma/logger/LoggerManager;' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='&lt;init&gt;(Lorg/slf4j/Logger;Lco/com/pragma/logger/LoggerManager;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testExceptionLogging$2(Ljava/lang/Exception;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;Ljava/lang/Throwable;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;Ljava/lang/Throwable;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/Class;)Lco/com/pragma/model/common/Logger;' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;Ljava/lang/Throwable;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;Ljava/lang/Throwable;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='&lt;init&gt;(Lorg/slf4j/Logger;Lco/com/pragma/logger/LoggerManager;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='getMinimumLogLevel()Lco/com/pragma/model/common/LogLevel;' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='setUp()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='setUp()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='setUp()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='setUp()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testExceptionLogging()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testSingletonPattern()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testSingletonPattern()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testSingletonPattern()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testSingletonPattern()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testSingletonPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isDebugEnabled()Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isDebugEnabled()Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isDebugEnabled()Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isDebugEnabled()Z' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isDebugEnabled()Z' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.model.common.LogLevel' method='isEnabled(Lco/com/pragma/model/common/LogLevel;)Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='trace(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='trace(Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='trace(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testLoggingOperations$0()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggingOperations()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggingOperations()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isTraceEnabled()Z' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isTraceEnabled()Z' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isTraceEnabled()Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isTraceEnabled()Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isTraceEnabled()Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggingOperations()]'/>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;[Ljava/lang/Object;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;[Ljava/lang/Object;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;[Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='info(Ljava/lang/String;[Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;[Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;[Ljava/lang/Object;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;[Ljava/lang/Object;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='error(Ljava/lang/String;[Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testParameterizedMessages()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testParameterizedMessages()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testParameterizedMessages$1()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testParameterizedMessages$1()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testParameterizedMessages$1()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='lambda$testParameterizedMessages$1()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testParameterizedMessages()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='8'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelFiltering()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerManager' method='setMinimumLogLevel(Lco/com/pragma/model/common/LogLevel;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='setMinimumLogLevel(Lco/com/pragma/model/common/LogLevel;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='setMinimumLogLevel(Lco/com/pragma/model/common/LogLevel;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='setMinimumLogLevel(Lco/com/pragma/model/common/LogLevel;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='isInfoEnabled()Z' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelFiltering()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLoggerCreation()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLoggerCreation()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='10'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='9'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='8'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerTest' method='testLogLevelEnum()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggerTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggerTest]/[method:testLogLevelEnum()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggerFactory' method='getLogger(Ljava/lang/String;)Lco/com/pragma/model/common/Logger;' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;[Ljava/lang/Object;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;[Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;[Ljava/lang/Object;)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='warn(Ljava/lang/String;[Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='10'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='11'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='8'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='9'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='14'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='15'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='12'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testCompleteLoggingWorkflow()V' number='13'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testCompleteLoggingWorkflow()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='8'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testReactiveLoggingPattern()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;[Ljava/lang/Object;)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;[Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.Slf4jLoggerAdapter' method='debug(Ljava/lang/String;[Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testReactiveLoggingPattern()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='15'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='14'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='16'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='11'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='10'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='13'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='12'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='7'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='6'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='9'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='8'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='5'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='4'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='testConcurrentAccess()V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='lambda$testConcurrentAccess$0([Lco/com/pragma/model/common/Logger;I)V' number='1'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='lambda$testConcurrentAccess$0([Lco/com/pragma/model/common/Logger;I)V' number='0'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='lambda$testConcurrentAccess$0([Lco/com/pragma/model/common/Logger;I)V' number='3'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
<block classname='co.com.pragma.logger.LoggingIntegrationTest' method='lambda$testConcurrentAccess$0([Lco/com/pragma/model/common/Logger;I)V' number='2'><tests>
<test name='co.com.pragma.logger.LoggingIntegrationTest.[engine:junit-jupiter]/[class:co.com.pragma.logger.LoggingIntegrationTest]/[method:testConcurrentAccess()]'/>
</tests>
</block>
</coverage>
